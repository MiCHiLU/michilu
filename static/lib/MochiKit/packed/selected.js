/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

	$ ./scripts/pack.py Base Iter DOM Style Signal Selector \
		>static/lib/MochiKit/packed/selected.js

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_flattenArray:function(_d,_e){
for(var i=0;i<_e.length;i++){
var o=_e[i];
if(o instanceof Array){
arguments.callee(_d,o);
}else{
_d.push(o);
}
}
return _d;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _15=m.extend(null,arguments);
while(_15.length){
var o=_15.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_15.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_18,obj,_1a){
if(!_1a){
_1a=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_18){
_18=[];
}
for(var i=_1a;i<l;i++){
_18.push(obj[i]);
}
}
return _18;
},updatetree:function(_1d,obj){
if(_1d===null){
_1d={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_1d[k])=="object"&&typeof (v)=="object"){
arguments.callee(_1d[k],v);
}else{
_1d[k]=v;
}
}
}
}
return _1d;
},setdefault:function(_23,obj){
if(_23===null){
_23={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _23)){
_23[k]=o[k];
}
}
}
return _23;
},keys:function(obj){
var _29=[];
for(var _2a in obj){
_29.push(_2a);
}
return _29;
},values:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(obj[_2d]);
}
return _2c;
},items:function(obj){
var _2f=[];
var e;
for(var _31 in obj){
var v;
try{
v=obj[_31];
}
catch(e){
continue;
}
_2f.push([_31,v]);
}
return _2f;
},_newNamedError:function(_33,_34,_35){
_35.prototype=new MochiKit.Base.NamedError(_33.NAME+"."+_34);
_33[_34]=_35;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_73){
return function(){
return this[_73].apply(this,arguments);
};
},itemgetter:function(_74){
return function(arg){
return arg[_74];
};
},typeMatcher:function(){
var _76={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_76[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _76)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _87=[];
for(var i=1;i<arguments.length;i++){
_87.push(fn(arguments[i]));
}
return _87;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _8d=m.isArrayLike;
if(arguments.length<=2){
if(!_8d(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _8e=[];
for(var i=0;i<lst.length;i++){
_8e.push(fn(lst[i]));
}
return _8e;
}else{
if(fn===null){
fn=Array;
}
var _90=null;
for(i=1;i<arguments.length;i++){
if(!_8d(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_90===null||_90>l){
_90=l;
}
}
_8e=[];
for(i=0;i<_90;i++){
var _92=[];
for(var j=1;j<arguments.length;j++){
_92.push(arguments[j][i]);
}
_8e.push(fn.apply(this,_92));
}
return _8e;
}
},xfilter:function(fn){
var _95=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_95.push(o);
}
}
return _95;
},filter:function(fn,lst,_9a){
var _9b=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9a);
}else{
if(typeof (_9a)=="undefined"||_9a===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9b.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9a,o)){
_9b.push(o);
}
}
}
}
return _9b;
},_wrapDumbFunction:function(_9f){
return function(){
switch(arguments.length){
case 0:
return _9f();
case 1:
return _9f(arguments[0]);
case 2:
return _9f(arguments[0],arguments[1]);
case 3:
return _9f(arguments[0],arguments[1],arguments[2]);
}
var _a0=[];
for(var i=0;i<arguments.length;i++){
_a0.push("arguments["+i+"]");
}
return eval("(func("+_a0.join(",")+"))");
};
},methodcaller:function(_a2){
var _a3=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a2)=="function"){
return function(obj){
return _a2.apply(obj,_a3);
};
}else{
return function(obj){
return obj[_a2].apply(obj,_a3);
};
}
},method:function(_a6,_a7){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_a7,_a6],arguments,2));
},compose:function(f1,f2){
var _ab=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ab.push(fn);
}
return function(){
var _af=arguments;
for(var i=_ab.length-1;i>=0;i--){
_af=[_ab[i].apply(this,_af)];
}
return _af[0];
};
},bind:function(_b1,_b2){
if(typeof (_b1)=="string"){
_b1=_b2[_b1];
}
var _b3=_b1.im_func;
var _b4=_b1.im_preargs;
var _b5=_b1.im_self;
var m=MochiKit.Base;
if(typeof (_b1)=="function"&&typeof (_b1.apply)=="undefined"){
_b1=m._wrapDumbFunction(_b1);
}
if(typeof (_b3)!="function"){
_b3=_b1;
}
if(typeof (_b2)!="undefined"){
_b5=_b2;
}
if(typeof (_b4)=="undefined"){
_b4=[];
}else{
_b4=_b4.slice();
}
m.extend(_b4,arguments,2);
var _b7=function(){
var _b8=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_b8=m.concat(me.im_preargs,_b8);
}
var _ba=me.im_self;
if(!_ba){
_ba=this;
}
return me.im_func.apply(_ba,_b8);
};
_b7.im_self=_b5;
_b7.im_func=_b3;
_b7.im_preargs=_b4;
return _b7;
},bindMethods:function(_bb){
var _bc=MochiKit.Base.bind;
for(var k in _bb){
var _be=_bb[k];
if(typeof (_be)=="function"){
_bb[k]=_bc(_be,_bb);
}
}
},registerComparator:function(_bf,_c0,_c1,_c2){
MochiKit.Base.comparatorRegistry.register(_bf,_c0,_c1,_c2);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _c5=(typeof (a)=="undefined"||a===null);
var _c6=(typeof (b)=="undefined"||b===null);
if(_c5&&_c6){
return 0;
}else{
if(_c5){
return -1;
}else{
if(_c6){
return 1;
}
}
}
var m=MochiKit.Base;
var _c8=m._primitives;
if(!(typeof (a) in _c8&&typeof (b) in _c8)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _c9=m.repr;
throw new TypeError(_c9(a)+" and "+_c9(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _ce=MochiKit.Base.compare;
var _cf=a.length;
var _d0=0;
if(_cf>b.length){
_d0=1;
_cf=b.length;
}else{
if(_cf<b.length){
_d0=-1;
}
}
for(var i=0;i<_cf;i++){
var cmp=_ce(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d0;
},registerRepr:function(_d3,_d4,_d5,_d6){
MochiKit.Base.reprRegistry.register(_d3,_d4,_d5,_d6);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _d8=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_d8.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _d8;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_de,_df,_e0,_e1){
MochiKit.Base.jsonRegistry.register(_de,_df,_e0,_e1);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _e5=typeof (o);
if(_e5=="number"||_e5=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _e7=m.reprString;
if(_e5=="string"){
return _e7(o);
}
var me=arguments.callee;
var _e9;
if(typeof (o.__json__)=="function"){
_e9=o.__json__();
if(o!==_e9){
return me(_e9);
}
}
if(typeof (o.json)=="function"){
_e9=o.json();
if(o!==_e9){
return me(_e9);
}
}
if(_e5!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_e9=m.jsonRegistry.match(o);
if(o!==_e9){
return me(_e9);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_e5=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_e5=="function"){
return null;
}
res=[];
for(var k in o){
var _ee;
if(typeof (k)=="number"){
_ee="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_ee=_e7(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_ee+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_f1,arr){
if(_f1.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_f1,arr)===0);
},concat:function(){
var _f3=[];
var _f4=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_f4(_f3,arguments[i]);
}
return _f3;
},keyComparator:function(key){
var m=MochiKit.Base;
var _f8=m.compare;
if(arguments.length==1){
return function(a,b){
return _f8(a[key],b[key]);
};
}
var _fb=m.extend(null,arguments);
return function(a,b){
var _fe=0;
for(var i=0;(_fe===0)&&(i<_fb.length);i++){
var key=_fb[i];
_fe=_f8(a[key],b[key]);
}
return _fe;
};
},reverseKeyComparator:function(key){
var _102=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _102(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_107,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _10a=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_10a(o,cur)==_107){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_10e,_10f,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_10f)=="undefined"||_10f===null){
_10f=0;
}
for(var i=_10f;i<end;i++){
if(lst[i]===_10e){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _115=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_115+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_115<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_115;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _119=data.length/2;
return (data[_119]+data[_119-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_11b,_11c,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11c)=="undefined"||_11c===null){
_11c=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_11c;i<end;i++){
if(cmp(lst[i],_11b)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_121){
var _122=[node];
var _123=MochiKit.Base.extend;
while(_122.length){
var res=_121(_122.shift());
if(res){
_123(_122,res);
}
}
},nameFunctions:function(_125){
var base=_125.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _125){
var o=_125[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_129,_12a){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_129)=="string"||(typeof (_129.nodeType)!="undefined"&&_129.nodeType>0))){
var kv=MochiKit.DOM.formContents(_129);
_129=kv[0];
_12a=kv[1];
}else{
if(arguments.length==1){
if(typeof (_129.length)=="number"&&_129.length==2){
return arguments.callee(_129[0],_129[1]);
}
var o=_129;
_129=[];
_12a=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(typeof (v)!="string"&&typeof (v.length)=="number"){
for(var i=0;i<v.length;i++){
_129.push(k);
_12a.push(v[i]);
}
}else{
_129.push(k);
_12a.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_129.length,_12a.length);
var _132=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_12a[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_132(_129[i])+"="+_132(v));
}
}
return rval.join("&");
},parseQueryString:function(_133,_134){
var qstr=(_133.charAt(0)=="?")?_133.substring(1):_133;
var _136=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _138;
if(typeof (decodeURIComponent)!="undefined"){
_138=decodeURIComponent;
}else{
_138=unescape;
}
if(_134){
for(var i=0;i<_136.length;i++){
var pair=_136[i].split("=");
var name=_138(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_138(pair.join("=")));
}
}else{
for(i=0;i<_136.length;i++){
pair=_136[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_138(name)]=_138(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_13e,wrap,_140){
if(_140){
this.pairs.unshift([name,_13e,wrap]);
}else{
this.pairs.push([name,_13e,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_146,_147){
if(!MochiKit.__export__){
return;
}
var all=_147.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_146[all[i]]=_147[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_14b){
return encodeURIComponent(_14b).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_14c){
return escape(_14c).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_150,_151,_152){
MochiKit.Iter.iteratorRegistry.register(name,_150,_151,_152);
},iter:function(_153,_154){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_154;
},_153);
}
if(typeof (_153.next)=="function"){
return _153;
}else{
if(typeof (_153.iter)=="function"){
return _153.iter();
}
}
try{
return self.iteratorRegistry.match(_153);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_153)+": "+m.repr(_153)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _15e=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_15e.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_164){
return _164.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _16a=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_16a);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _176=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_176=arguments[1];
stop=arguments[2];
}else{
_176=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_176,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_176){
rval=seq.next();
i++;
}
if(_176>=stop){
throw self.StopIteration;
}
_176+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _180=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_180));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _18b=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_18b.length>1){
try{
return _18b[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_18b.shift();
}
}
if(_18b.length==1){
var arg=_18b.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_196,sync,_198){
sync.pos[_196]=-1;
var m=MochiKit.Base;
var _19a=m.listMin;
return {repr:function(){
return "tee("+_196+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_196];
if(i==sync.max){
rval=_198.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_196]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_196]+=1;
if(i==sync.min&&_19a(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_19d,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_19d=self.iter(_19d);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_19d));
}
return rval;
},list:function(_1a4){
var rval;
if(_1a4 instanceof Array){
return _1a4.slice();
}
if(typeof (_1a4)=="function"&&!(_1a4 instanceof Function)&&typeof (_1a4.length)=="number"){
rval=[];
for(var i=0;i<_1a4.length;i++){
rval.push(_1a4[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1a4=self.iter(_1a4);
var rval=[];
try{
while(true){
rval.push(_1a4.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1a9,_1aa){
var i=0;
var x=_1aa;
var self=MochiKit.Iter;
_1a9=self.iter(_1a9);
if(arguments.length<3){
try{
x=_1a9.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1a9.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1ae=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1ae=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1ae=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1ae>=stop)||(step<0&&_1ae<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1ae;
_1ae+=step;
return rval;
},repr:function(){
return "range("+[_1ae,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1b2,_1b3){
if(typeof (_1b3)=="undefined"||_1b3===null){
_1b3=0;
}
var x=_1b3;
var self=MochiKit.Iter;
_1b2=self.iter(_1b2);
try{
while(true){
x+=_1b2.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1b6){
var self=MochiKit.Iter;
_1b6=self.iter(_1b6);
try{
while(true){
_1b6.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1b8,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_1b8)){
try{
for(var i=0;i<_1b8.length;i++){
func(_1b8[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_1b8));
}
},every:function(_1bd,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1bd).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1c0,cmp){
var rval=MochiKit.Iter.list(_1c0);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1c3){
var rval=MochiKit.Iter.list(_1c3);
rval.reverse();
return rval;
},some:function(_1c5,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1c5).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1c9){
if(MochiKit.Base.isArrayLike(_1c9)){
for(var i=0;i<_1c9.length;i++){
lst.push(_1c9[i]);
}
}else{
var self=MochiKit.Iter;
_1c9=self.iter(_1c9);
try{
while(true){
lst.push(_1c9.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1cc,_1cd){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1cd=m.operator.identity;
}
_1cc=self.iter(_1cc);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1cc.next();
k=_1cd(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1d4=true;
var _1d5=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1d5(k,pk)===0){
fetch();
if(_1d4){
_1d4=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1d5(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1d6,_1d7){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1d7=m.operator.identity;
}
_1d6=self.iter(_1d6);
var _1da=[];
var _1db=true;
var _1dc;
var _1dd=m.compare;
while(true){
try{
var _1de=_1d6.next();
var key=_1d7(_1de);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1db||_1dd(key,_1dc)!==0){
var _1e0=[];
_1da.push([key,_1e0]);
}
_1e0.push(_1de);
_1db=false;
_1dc=key;
}
return _1da;
},arrayLikeIter:function(_1e1){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1e1.length){
throw MochiKit.Iter.StopIteration;
}
return _1e1[i++];
}};
},hasIterateNext:function(_1e3){
return (_1e3&&typeof (_1e3.iterateNext)=="function");
},iterateNextIter:function(_1e4){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1e4.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _1ea=self._document;
var _1eb=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_1eb;
self._document=_1ea;
throw e;
}
self._window=_1eb;
self._document=_1ea;
return rval;
},formContents:function(elem){
var _1ee=[];
var _1ef=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _1f4=elem.tagName.toUpperCase();
if(_1f4==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_1f4==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1ee.push(name);
_1ef.push(v);
return null;
}
_1ee.push(name);
_1ef.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_1ee.push(name);
_1ef.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_1ee.push(name);
_1ef.push(v);
}
return null;
}
}
if(_1f4==="FORM"||_1f4==="P"||_1f4==="SPAN"||_1f4==="DIV"){
return elem.childNodes;
}
_1ee.push(name);
_1ef.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_1ee,_1ef];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _1fd=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_1fd;
throw e;
}
self._document=_1fd;
return rval;
},registerDOMConverter:function(name,_200,wrap,_202){
MochiKit.DOM.domConverters.register(name,_200,wrap,_202);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _209=im.repeat;
var map=m.map;
}
var _20b=self.domConverters;
var _20c=arguments.callee;
var _20d=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _20e=null;
try{
_20e=iter(node);
}
catch(e){
}
if(_20e){
return map(_20c,_20e,_209(ctx));
}
}
try{
node=_20b.match(node,ctx);
continue;
}
catch(e){
if(e!=_20d){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_210){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_210)=="string"){
_210=self.getElement(_210);
}
if(node===_210){
return true;
}
while(node&&node.tagName.toUpperCase()!="BODY"){
node=node.parentNode;
if(node===_210){
return true;
}
}
return false;
},setNodeAttribute:function(node,attr,_214){
var o={};
o[attr]=_214;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _219=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_219){
return node[_219];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _21d=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_21d){
return node[_21d];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_21f){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_21f){
var _222=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _21f){
var v=_21f[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_222(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _225=self.attributeArray.renames;
for(var k in _21f){
v=_21f[k];
var _226=_225[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_226)=="string"){
elem[_226]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_222(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _22a=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _22b=MochiKit.Base.concat;
while(_22a.length){
var n=_22a.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_22a=_22b(n,_22a);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _230=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _231=elem.parentNode;
var _232=MochiKit.Base.concat;
while(_230.length){
var n=_230.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_231.insertBefore(n,elem);
}else{
_230=_232(n,_230);
}
}
}
return _231;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _237=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_237);
}else{
return self.appendChildNodes(elem.parentNode,_237);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _23b;
while((_23b=elem.firstChild)){
elem.removeChild(_23b);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_23d){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_23d)=="string"||typeof (_23d)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _242=self._xhtml;
if(_23d&&!self.attributeArray.compliant){
var _243="";
if("name" in _23d){
_243+=" name=\""+self.escapeHTML(_23d.name)+"\"";
}
if(name=="input"&&"type" in _23d){
_243+=" type=\""+self.escapeHTML(_23d.type)+"\"";
}
if(_243){
name="<"+name+_243+">";
_242=false;
}
}
var d=self._document;
if(_242&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_23d){
self.updateNodeAttributes(elem,_23d);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _24b=dest.parentNode;
if(src){
src=self.getElement(src);
_24b.replaceChild(src,dest);
}else{
_24b.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_24e,_24f,_250){
var self=MochiKit.DOM;
if(typeof (_24e)=="undefined"||_24e===null){
_24e="*";
}
if(typeof (_250)=="undefined"||_250===null){
_250=self._document;
}
_250=self.getElement(_250);
var _252=(_250.getElementsByTagName(_24e)||self._document.all);
if(typeof (_24f)=="undefined"||_24f===null){
return MochiKit.Base.extend(null,_252);
}
var _253=[];
for(var i=0;i<_252.length;i++){
var _255=_252[i];
var cls=_255.className;
if(!cls){
continue;
}
var _257=cls.split(" ");
for(var j=0;j<_257.length;j++){
if(_257[j]==_24f){
_253.push(_255);
break;
}
}
}
return _253;
},_newCallStack:function(path,once){
var rval=function(){
var _25c=arguments.callee.callStack;
for(var i=0;i<_25c.length;i++){
if(_25c[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_25e,path,func,once){
var self=MochiKit.DOM;
var _263=_25e[path];
var _264=_263;
if(!(typeof (_263)=="function"&&typeof (_263.callStack)=="object"&&_263.callStack!==null)){
_264=self._newCallStack(path,once);
if(typeof (_263)=="function"){
_264.callStack.push(_263);
}
_25e[path]=_264;
}
_264.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_267){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_267=self.getElement(_267);
if(_267){
_267.focus();
}
});
},setElementClass:function(_269,_26a){
var self=MochiKit.DOM;
var obj=self.getElement(_269);
if(self.attributeArray.compliant){
obj.setAttribute("class",_26a);
}else{
obj.setAttribute("className",_26a);
}
},toggleElementClass:function(_26d){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_26d)){
self.removeElementClass(obj,_26d);
}
}
},addElementClass:function(_271,_272){
var self=MochiKit.DOM;
var obj=self.getElement(_271);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_272);
return true;
}
if(cls==_272){
return false;
}
var _276=cls.split(" ");
for(var i=0;i<_276.length;i++){
if(_276[i]==_272){
return false;
}
}
self.setElementClass(obj,cls+" "+_272);
return true;
},removeElementClass:function(_278,_279){
var self=MochiKit.DOM;
var obj=self.getElement(_278);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_279){
self.setElementClass(obj,"");
return true;
}
var _27d=cls.split(" ");
for(var i=0;i<_27d.length;i++){
if(_27d[i]==_279){
_27d.splice(i,1);
self.setElementClass(obj,_27d.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_27f,_280,_281){
var obj=MochiKit.DOM.getElement(_27f);
var res=MochiKit.DOM.removeElementClass(obj,_280);
if(res){
MochiKit.DOM.addElementClass(obj,_281);
}
return res;
},hasElementClass:function(_284,_285){
var obj=MochiKit.DOM.getElement(_284);
var cls=obj.className;
if(!cls){
return false;
}
var _288=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_288.length;j++){
if(_288[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _290=[dom];
var self=MochiKit.DOM;
var _292=self.escapeHTML;
var _293=self.attributeArray;
while(_290.length){
dom=_290.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _294=[];
var _295=_293(dom);
for(var i=0;i<_295.length;i++){
var a=_295[i];
_294.push([" ",a.name,"=\"",_292(a.value),"\""]);
}
_294.sort();
for(i=0;i<_294.length;i++){
var _298=_294[i];
for(var j=0;j<_298.length;j++){
lst.push(_298[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_290.push("</"+dom.tagName.toLowerCase()+">");
var _29a=dom.childNodes;
for(i=_29a.length-1;i>=0;i--){
_290.push(_29a[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_292(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_29c){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _2a1=node.nodeValue;
if(typeof (_2a1)=="string"){
rval.push(_2a1);
}
})(MochiKit.DOM.getElement(node));
if(_29c){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_2a2){
_2a2=MochiKit.DOM.getElement(_2a2);
for(var i=0;i<_2a2.childNodes.length;i++){
var node=_2a2.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_2a5){
_2a5=MochiKit.DOM.getElement(_2a5);
var _2a6=_2a5.style.overflow;
if((MochiKit.Style.getStyle(_2a5,"overflow")||"visible")!="hidden"){
_2a5.style.overflow="hidden";
}
return _2a6;
},undoClipping:function(_2a7,_2a8){
_2a7=MochiKit.DOM.getElement(_2a7);
if(!_2a8){
return;
}
_2a7.style.overflow=_2a8;
},makePositioned:function(_2a9){
_2a9=MochiKit.DOM.getElement(_2a9);
var pos=MochiKit.Style.getStyle(_2a9,"position");
if(pos=="static"||!pos){
_2a9.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_2a9.style.top=0;
_2a9.style.left=0;
}
}
},undoPositioned:function(_2ab){
_2ab=MochiKit.DOM.getElement(_2ab);
if(_2ab.style.position=="relative"){
_2ab.style.position=_2ab.style.top=_2ab.style.left=_2ab.style.bottom=_2ab.style.right="";
}
},getFirstElementByTagAndClassName:function(_2ac,_2ad,_2ae){
var self=MochiKit.DOM;
if(typeof (_2ac)=="undefined"||_2ac===null){
_2ac="*";
}
if(typeof (_2ae)=="undefined"||_2ae===null){
_2ae=self._document;
}
_2ae=self.getElement(_2ae);
var _2b0=(_2ae.getElementsByTagName(_2ac)||self._document.all);
if(typeof (_2ad)=="undefined"||_2ad===null){
return _2b0[0];
}
for(var i=0;i<_2b0.length;i++){
var _2b2=_2b0[i];
var _2b3=_2b2.className.split(" ");
for(var j=0;j<_2b3.length;j++){
if(_2b3[j]==_2ad){
return _2b2;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_2b6,_2b7){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_2b6)=="undefined"||_2b6===null){
_2b6="*";
}else{
_2b6=_2b6.toUpperCase();
}
if(typeof (_2b7)=="undefined"||_2b7===null){
_2b7=null;
}
var _2b9="";
var _2ba="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_2b6=="*"&&_2b7===null){
return elem;
}
_2b9=elem.className.split(" ");
_2ba=elem.tagName.toUpperCase();
if(_2b7===null&&_2b6==_2ba){
return elem;
}else{
if(_2b7!==null){
for(var i=0;i<_2b9.length;i++){
if(_2b6=="*"&&_2b9[i]==_2b7){
return elem;
}else{
if(_2b6==_2ba&&_2b9[i]==_2b7){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_2bc,_2bd){
if(!_2bc.parentNode||_2bc==_2bd){
return false;
}
if(_2bc.parentNode==_2bd){
return true;
}
return MochiKit.DOM.isParent(_2bc.parentNode,_2bd);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _2c0="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_2c0);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _2c1=this._document.createElement("span");
var _2c2;
if(_2c1&&_2c1.attributes&&_2c1.attributes.length>0){
var _2c3=m.filter;
_2c2=function(node){
return _2c3(_2c2.ignoreAttrFilter,node.attributes);
};
_2c2.ignoreAttr={};
var _2c5=_2c1.attributes;
var _2c6=_2c2.ignoreAttr;
for(var i=0;i<_2c5.length;i++){
var a=_2c5[i];
_2c6[a.name]=a.value;
}
_2c2.ignoreAttrFilter=function(a){
return (_2c2.ignoreAttr[a.name]!=a.value);
};
_2c2.compliant=false;
_2c2.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_2c2=function(node){
return node.attributes;
};
_2c2.compliant=true;
_2c2.renames={};
}
this.attributeArray=_2c2;
var _2cb=function(_2cc,arr){
var _2ce=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_2ce[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_2ce[1]+".\");}";
str+="return MochiKit."+_2ce[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_2ce[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_2cc],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_2cb("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _2d1=this.createDOMFunc;
this.UL=_2d1("ul");
this.OL=_2d1("ol");
this.LI=_2d1("li");
this.TD=_2d1("td");
this.TR=_2d1("tr");
this.TBODY=_2d1("tbody");
this.THEAD=_2d1("thead");
this.TFOOT=_2d1("tfoot");
this.TABLE=_2d1("table");
this.TH=_2d1("th");
this.INPUT=_2d1("input");
this.SPAN=_2d1("span");
this.A=_2d1("a");
this.DIV=_2d1("div");
this.IMG=_2d1("img");
this.BUTTON=_2d1("button");
this.TT=_2d1("tt");
this.PRE=_2d1("pre");
this.H1=_2d1("h1");
this.H2=_2d1("h2");
this.H3=_2d1("h3");
this.BR=_2d1("br");
this.HR=_2d1("hr");
this.LABEL=_2d1("label");
this.TEXTAREA=_2d1("textarea");
this.FORM=_2d1("form");
this.P=_2d1("p");
this.SELECT=_2d1("select");
this.OPTION=_2d1("option");
this.OPTGROUP=_2d1("optgroup");
this.LEGEND=_2d1("legend");
this.FIELDSET=_2d1("fieldset");
this.STRONG=_2d1("strong");
this.CANVAS=_2d1("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_2d9){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_2d9=MochiKit.Base.camelize(_2d9);
if(!elem||elem==d){
return undefined;
}
if(_2d9=="opacity"&&elem.filters){
var _2dc=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_2dc&&_2dc[1]){
return parseFloat(_2dc[1])/100;
}
return 1;
}
var _2dd=elem.style?elem.style[_2d9]:null;
if(!_2dd){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_2d9=_2d9.replace(/([A-Z])/g,"-$1").toLowerCase();
_2dd=css?css.getPropertyValue(_2d9):null;
}else{
if(elem.currentStyle){
_2dd=elem.currentStyle[_2d9];
}
}
}
if(_2d9=="opacity"){
_2dd=parseFloat(_2dd);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_2d9)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_2dd="auto";
}
}
return _2dd=="auto"?null:_2dd;
},setStyle:function(elem,_2e0){
elem=MochiKit.DOM.getElement(elem);
for(var name in _2e0){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_2e0[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_2e0[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _2e5=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_2e5?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_2e7){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _2ec=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_2ec=elem.offsetParent;
if(_2ec!=elem){
while(_2ec){
c.x+=_2ec.offsetLeft;
c.y+=_2ec.offsetTop;
_2ec=_2ec.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_2e7)!="undefined"){
_2e7=arguments.callee(_2e7);
if(_2e7){
c.x-=(_2e7.x||0);
c.y-=(_2e7.y||0);
}
}
if(elem.parentNode){
_2ec=elem.parentNode;
}else{
_2ec=null;
}
while(_2ec){
var _2f1=_2ec.tagName.toUpperCase();
if(_2f1==="BODY"||_2f1==="HTML"){
break;
}
var disp=self.getStyle(_2ec,"display");
if(disp!="inline"&&disp!="table-row"){
c.x-=_2ec.scrollLeft;
c.y-=_2ec.scrollTop;
}
if(_2ec.parentNode){
_2ec=_2ec.parentNode;
}else{
_2ec=null;
}
}
return c;
},setElementPosition:function(elem,_2f4,_2f5){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_2f5)=="undefined"){
_2f5="px";
}
var _2f6={};
var _2f7=MochiKit.Base.isUndefinedOrNull;
if(!_2f7(_2f4.x)){
_2f6["left"]=_2f4.x+_2f5;
}
if(!_2f7(_2f4.y)){
_2f6["top"]=_2f4.y+_2f5;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_2f6});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _2fd=s.visibility;
var _2fe=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _2ff=elem.offsetWidth;
var _300=elem.offsetHeight;
s.display="none";
s.position=_2fe;
s.visibility=_2fd;
return new self.Dimensions(_2ff,_300);
},setElementDimensions:function(elem,_302,_303){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_303)=="undefined"){
_303="px";
}
var _304={};
var _305=MochiKit.Base.isUndefinedOrNull;
if(!_305(_302.w)){
_304["width"]=_302.w+_303;
}
if(!_305(_302.h)){
_304["height"]=_302.h+_303;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_304});
},setDisplayForElement:function(_306,_307){
var _308=MochiKit.Base.extend(null,arguments,1);
var _309=MochiKit.DOM.getElement;
for(var i=0;i<_308.length;i++){
_307=_309(_308[i]);
if(_307){
_307.style.display=_306;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Style!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _31f=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_31f[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _320=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_320[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_320[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_320[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_320[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_322){
this.source=_322.source;
this.signal=_322.signal;
this.listener=_322.listener;
this.isDOM=_322.isDOM;
this.objOrFunc=_322.objOrFunc;
this.funcOrStr=_322.funcOrStr;
this.connected=_322.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _324=self._observers;
for(var i=0;i<_324.length;i++){
if(_324[i].signal!=="onload"&&_324[i].signal!=="onunload"){
self._disconnect(_324[i]);
}
}
},_listener:function(src,sig,func,obj,_32a){
var self=MochiKit.Signal;
var E=self.Event;
if(!_32a){
return MochiKit.Base.bind(func,obj);
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_32d){
obj[func].apply(obj,[new E(src,_32d)]);
var _32e=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_32e);
};
}else{
return function(_32f){
obj[func].apply(obj,[new E(src,_32f)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_330){
func.apply(obj,[new E(src,_330)]);
MochiKit.Signal.disconnect(src,sig,func);
var _331=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_331);
};
}else{
return function(_332){
func.apply(obj,[new E(src,_332)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_338){
var e=new E(src,_338);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_33a,_33b){
var obj=null;
var func=null;
if(typeof (_33b)!="undefined"){
obj=_33a;
func=_33b;
if(typeof (_33b)=="string"){
if(typeof (_33a[_33b])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_33b)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_33a)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_33a;
}
}
return [obj,func];
},connect:function(src,sig,_340,_341){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _343=self._getDestPair(_340,_341);
var obj=_343[0];
var func=_343[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _346=!!(src.addEventListener||src.attachEvent);
if(_346&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _347=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _347=self._listener(src,sig,func,obj,_346);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_347,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_347);
}
}
var _348=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_347,isDOM:_346,objOrFunc:_340,funcOrStr:_341,connected:true});
self._observers.push(_348);
if(!_346&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_348],arguments,1);
src.__connect__.apply(src,args);
}
return _348;
},_disconnect:function(_34a){
if(!_34a.connected){
return;
}
_34a.connected=false;
if(!_34a.isDOM){
return;
}
var src=_34a.source;
var sig=_34a.signal;
var _34d=_34a.listener;
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_34d,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_34d);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_34e){
var self=MochiKit.Signal;
var _350=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_350.length-1;i>=0;i--){
var o=_350[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_350.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_350,_34e);
if(idx>=0){
self._disconnect(_34e);
if(!self._lock){
_350.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_359,_35a){
var self=MochiKit.Signal;
var _35c=self._observers;
var _35d=self._disconnect;
var _35e=self._lock;
var _35f=self._dirty;
if(typeof (_35a)==="undefined"){
_35a=null;
}
for(var i=_35c.length-1;i>=0;i--){
var _361=_35c[i];
if(_361.objOrFunc===_359&&(_35a===null||_361.funcOrStr===_35a)){
_35d(_361);
if(_35e){
_35f=true;
}else{
_35c.splice(i,1);
}
}
}
self._dirty=_35f;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _365=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _367=self._disconnect;
var _368=self._observers;
var i,_36a;
var _36b=self._lock;
var _36c=self._dirty;
if(_365.length===0){
for(i=_368.length-1;i>=0;i--){
_36a=_368[i];
if(_36a.source===src){
_367(_36a);
if(!_36b){
_368.splice(i,1);
}else{
_36c=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_365.length;i++){
sigs[_365[i]]=true;
}
for(i=_368.length-1;i>=0;i--){
_36a=_368[i];
if(_36a.source===src&&_36a.signal in sigs){
_367(_36a);
if(!_36b){
_368.splice(i,1);
}else{
_36c=true;
}
}
}
}
self._dirty=_36c;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _371=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _373=[];
self._lock=true;
for(var i=0;i<_371.length;i++){
var _375=_371[i];
if(_375.source===src&&_375.signal===sig&&_375.connected){
try{
_375.listener.apply(src,args);
}
catch(e){
_373.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_371.length-1;i>=0;i--){
if(!_371[i].connected){
_371.splice(i,1);
}
}
}
if(_373.length==1){
throw _373[0];
}else{
if(_373.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_373;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Selector");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Base)==="undefined"||typeof (MochiKit.DOM)==="undefined"||typeof (MochiKit.Iter)==="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Selector depends on MochiKit.Base, MochiKit.DOM and MochiKit.Iter!";
}
if(typeof (MochiKit.Selector)=="undefined"){
MochiKit.Selector={};
}
MochiKit.Selector.NAME="MochiKit.Selector";
MochiKit.Selector.VERSION="1.4";
MochiKit.Selector.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Selector.toString=function(){
return this.__repr__();
};
MochiKit.Selector.EXPORT=["Selector","findChildElements","findDocElements","$$"];
MochiKit.Selector.EXPORT_OK=[];
MochiKit.Selector.Selector=function(_379){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_379.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_37a){
throw "Parse error in selector: "+_37a;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _37c=this.params;
var expr=this.expression;
var _37e,_37f,_380,rest;
while(_37e=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_37c.attributes=_37c.attributes||[];
_37c.attributes.push({name:_37e[2],operator:_37e[3],value:_37e[4]||_37e[5]||""});
expr=_37e[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_37e=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_37f=_37e[1];
_380=_37e[2];
rest=_37e[3];
switch(_37f){
case "#":
_37c.id=_380;
break;
case ".":
_37c.classNames.push(_380);
break;
case ":":
_37c.pseudoClassNames.push(_380);
break;
case "":
case undefined:
_37c.tagName=_380.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _383=this.params;
var _384=[];
var _385,i;
function childElements(_387){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_387+".childNodes)";
}
if(_383.wildcard){
_384.push("true");
}
if(_385=_383.id){
_384.push("element.id == "+repr(_385));
}
if(_385=_383.tagName){
_384.push("element.tagName.toUpperCase() == "+repr(_385));
}
if((_385=_383.classNames).length>0){
for(i=0;i<_385.length;i++){
_384.push("MochiKit.DOM.hasElementClass(element, "+repr(_385[i])+")");
}
}
if((_385=_383.pseudoClassNames).length>0){
for(i=0;i<_385.length;i++){
var _388=_385[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _389=_388[1];
var _38a=_388[2];
switch(_389){
case "root":
_384.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_388=_38a.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_388){
throw "Invalid argument to pseudo element nth-child: "+_38a;
}
var a,b;
if(_388[0]=="odd"){
a=2;
b=1;
}else{
if(_388[0]=="even"){
a=2;
b=0;
}else{
a=_388[2]&&parseInt(_388)||null;
b=parseInt(_388[3]);
}
}
_384.push("this.nthChild(element,"+a+","+b+","+!!_389.match("^nth-last")+","+!!_389.match("of-type$")+")");
break;
case "first-child":
_384.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_384.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_384.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_384.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_384.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_384.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_384.push("element.childNodes.length == 0");
break;
case "enabled":
_384.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_384.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_384.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _38d=new MochiKit.Selector.Selector(_38a);
_384.push("!( "+_38d.buildMatchExpression()+")");
break;
}
}
}
if(_385=_383.attributes){
MochiKit.Base.map(function(_38e){
var _38f="MochiKit.DOM.getNodeAttribute(element, "+repr(_38e.name)+")";
var _390=function(_391){
return _38f+".split("+repr(_391)+")";
};
switch(_38e.operator){
case "=":
_384.push(_38f+" == "+repr(_38e.value));
break;
case "~=":
_384.push(_38f+" && MochiKit.Base.findValue("+_390(" ")+", "+repr(_38e.value)+") > -1");
break;
case "^=":
_384.push(_38f+".substring(0, "+_38e.value.length+") == "+repr(_38e.value));
break;
case "$=":
_384.push(_38f+".substring("+_38f+".length - "+_38e.value.length+") == "+repr(_38e.value));
break;
case "*=":
_384.push(_38f+".match("+repr(_38e.value)+")");
break;
case "|=":
_384.push(_38f+" && "+_390("-")+"[0].toUpperCase() == "+repr(_38e.value.toUpperCase()));
break;
case "!=":
_384.push(_38f+" != "+repr(_38e.value));
break;
case "":
case undefined:
_384.push(_38f+" != null");
break;
default:
throw "Unknown operator "+_38e.operator+" in selector";
}
},_385);
}
return _384.join(" && ");
},compileMatcher:function(){
this.match=new Function("element","if (!element.tagName) return false;                 return "+this.buildMatchExpression());
},nthChild:function(_392,a,b,_395,_396){
var _397=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_392.parentNode.childNodes);
if(_396){
_397=MochiKit.Base.filter(function(node){
return node.tagName==_392.tagName;
},_397);
}
if(_395){
_397=MochiKit.Iter.reversed(_397);
}
if(a){
var _39a=MochiKit.Base.findIdentical(_397,_392);
return ((_39a+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_397,_392)+1;
}
},isUIElement:function(_39b){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_39b.tagName.toLowerCase())>-1;
},findElements:function(_39c,axis){
var _39e;
if(axis==undefined){
axis="";
}
function inScope(_39f,_3a0){
if(axis==""){
return MochiKit.DOM.isChildNode(_39f,_3a0);
}else{
if(axis==">"){
return _39f.parentNode==_3a0;
}else{
if(axis=="+"){
return _39f==nextSiblingElement(_3a0);
}else{
if(axis=="~"){
var _3a1=_3a0;
while(_3a1=nextSiblingElement(_3a1)){
if(_39f==_3a1){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_39e=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_39e)){
if(!_39c||inScope(_39e,_39c)){
return [_39e];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_39c=(_39c||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_39c){
throw "> combinator not allowed without preceeding expression";
}
_39c=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_39c.childNodes);
}else{
if(axis=="+"){
if(!_39c){
throw "+ combinator not allowed without preceeding expression";
}
_39c=nextSiblingElement(_39c)&&[nextSiblingElement(_39c)];
}else{
if(axis=="~"){
if(!_39c){
throw "~ combinator not allowed without preceeding expression";
}
var _3a4=[];
while(nextSiblingElement(_39c)){
_39c=nextSiblingElement(_39c);
_3a4.push(_39c);
}
_39c=_3a4;
}
}
}
}
if(!_39c){
return [];
}
var _3a5=MochiKit.Base.filter(MochiKit.Base.bind(function(_3a6){
return this.match(_3a6);
},this),_39c);
return _3a5;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_3a7,_3a8){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_3a9){
var _3aa="";
return MochiKit.Iter.reduce(function(_3ab,expr){
if(match=expr.match(/^[>+~]$/)){
_3aa=match[0];
return _3ab;
}else{
var _3ad=new MochiKit.Selector.Selector(expr);
var _3ae=MochiKit.Iter.reduce(function(_3af,_3b0){
return MochiKit.Base.extend(_3af,_3ad.findElements(_3b0||_3a7,_3aa));
},_3ab,[]);
_3aa="";
return _3ae;
}
},_3a9.replace(/(^\s+|\s+$)/g,"").split(/\s+/),[null]);
},_3a8));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
var m=MochiKit.Base;
this.$$=this.findDocElements;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);


